/*! ngs3upload 02-03-2016 */
!function(a,b){angular.module("ngS3upload.config",[]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload.services",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.config").constant("ngS3Config",{theme:"bootstrap2"}).value("ngS3UploadConfig",{}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.services").service("S3Uploader",["$http","$q","$window",function(a,b,c){this.uploads=0;var d=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a,b){d.resolve(a)}).error(function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,e,f,g,h,i,j,k){function l(b){a.$apply(function(){b.lengthComputable?a.progress=Math.round(100*b.loaded/b.total):a.progress="unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof p.notify&&p.notify(c)})}function m(b){var f=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,204===f.status?(a.success=!0,p.resolve(f),a.$emit("s3upload:success",f,{path:c+e})):(a.success=!1,p.reject(f),a.$emit("s3upload:error",f))})}function n(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:error",c)})}function o(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:abort",c)})}var p=b.defer();a.attempt=!0;var q=new FormData;q.append("key",e),q.append("acl",f),q.append("Content-Type",k.type),q.append("AWSAccessKeyId",h),q.append("policy",i),q.append("signature",j),q.append("file",k);var r=new XMLHttpRequest;return r.upload.addEventListener("progress",l,!1),r.addEventListener("load",m,!1),r.addEventListener("error",n,!1),r.addEventListener("abort",o,!1),a.$emit("s3upload:start",r),a.uploading=!0,this.uploads++,r.open("POST",c,!0),r.send(q),p.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives").directive("s3Upload",["$parse","S3Uploader","ngS3Config","ngS3UploadConfig",function(a,b,c,d){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1,a.isUploadSuccessful=function(){return a.attempt&&!a.uploading&&a.success}}],compile:function(a,c,e){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,c,e,f){var g=angular.extend({},a.$eval(e.s3UploadOptions||e.options));g=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",getManualOptions:null,acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0,targetFilename:null},d,g);var h=a.$eval(e.bucket),i=angular.element(c.children()[0]),j=angular.element(c.find("input")[0]);i.bind("click",function(a){j[0].click()}),f.$render=function(){a.filename=f.$viewValue};var k=function(){function c(c){g.enableValidation&&f.$setValidity("uploading",!1);var j="https://"+h+".s3.amazonaws.com/",k=g.randomLength||16,l=g.targetFilename?a.$eval(g.targetFilename):g.folder+(new Date).getTime()+"-"+b.randomString(k)+"."+i;g.targetFilename&&(l=l.replace("%file.name%",e),l=l.replace("%file.ext%",i),l=l.replace("%uploader.folder%",g.folder||""),l=l.replace("%uploader.date%",(new Date).getTime()),l=l.replace("%uploader.date_ms%",(new Date).getTime()),l=l.replace("%uploader.date_sec%",Math.floor((new Date).getTime()/1e3))),b.upload(a,j,l,g.acl,d.type,c.key,c.policy,c.signature,d).then(function(){f.$setViewValue(j+l),a.filename=f.$viewValue,g.enableValidation&&(f.$setValidity("uploading",!0),f.$setValidity("succeeded",!0))},function(){a.filename=f.$viewValue,g.enableValidation&&(f.$setValidity("uploading",!0),f.$setValidity("succeeded",!1))})}var d=j[0].files[0],e=d.name,i=e.split(".").pop();angular.isObject(g.getManualOptions)?c(g.getManualOptions):b.getUploadOptions(g.getOptionsUri).then(function(a){c(a)},function(a){throw Error("Can't receive the needed options for S3 "+a)})};c.bind("change",function(b){g.submitOnChange&&a.$apply(function(){k()})}),angular.isDefined(e.doUpload)&&a.$watch(e.doUpload,function(a){a&&k()})}}},templateUrl:function(a,b){var d=b.theme||c.theme;return-1===d.indexOf("/")?"theme/"+d+".html":d}}}]),angular.module("ngS3upload").run(["$templateCache",function(a){"use strict";a.put("theme/bootstrap2.html",'<div class="upload-wrap">\r\n  <button class="btn btn-primary" type="button">\r\n    <span ng-if="!filename">Choose file</span>\r\n    <span ng-if="filename">Replace file</span>\r\n  </button>\r\n  <a ng-href="{{ filename }}" target="_blank" ng-if="filename">Stored file</a>\r\n  <div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px;">\r\n    <div class="bar" ng-class="{\'bar-success\': isUploadSuccessful()}" style="width: {{ progress }}%;"></div>\r\n  </div>\r\n  <input type="file" class="hidden"/>\r\n</div>\r\n'),a.put("theme/bootstrap3.html",'<div class="upload-wrap">\r\n  <button class="btn btn-primary" type="button">\r\n    <span ng-if="!filename">Choose file</span>\r\n    <span ng-if="filename">Replace file</span>\r\n  </button>\r\n  <a ng-href="{{ filename }}" target="_blank" ng-if="filename">Stored file</a>\r\n  <div class="progress" style="margin-top: 10px;" ng-show="attempt">\r\n    <div class="progress-bar progress-bar-striped" ng-class="{active: uploading, \'bar-success\': isUploadSuccessful()}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%;">\r\n      <span class="sr-only">{{progress}}% Complete</span>\r\n    </div>\r\n  </div>\r\n  <input type="file" class="hidden"/>\r\n</div>\r\n')}])}(window,document);